// Empty catch all tasks
task compile {}
task clean {}

def findDependencies(dir) {
    def result = []
    if (dir.exists()) {
        dir.readLines().each { line -> 
            result.addAll(fileTree(line).matching {include '*.java'})
            result.addAll(findDependencies(new File(line, 'dependsOn')))
        }
    }
    return result
}

new File(".").eachDir { lessonDir ->
    // For each Lesson Directory
    if (lessonDir.name.startsWith("Lesson")) {

        // Catch all clean tasks for this lesson
        task "clean${lessonDir.name}" {}
        clean.dependsOn "clean${lessonDir.name}"

        // Catch all compile tasks for this lesson
        task "compile${lessonDir.name}" {}
        compile.dependsOn "compile${lessonDir.name}"

        lessonDir.eachDir { codeDir ->
            if (codeDir.name.startsWith("Exercise")
                || codeDir.name.startsWith("Activity")
                || codeDir.name.startsWith("Snippet")) {

                def compileDir = file("${buildDir}/compiled/${lessonDir.name}/${codeDir.name}")

                def javaFiles = []
                codeDir.eachFile {
                    if (it.name.endsWith('.java')) {
                        javaFiles.add(it)
                    }
                }

                javaFiles.addAll(findDependencies(new File(codeDir, 'dependsOn')))

                // Clean Activity/Exercise/Snippet Task
                task "clean${lessonDir.name}${codeDir.name}" (type:Delete) {
                    delete compileDir
                }
                tasks["clean${lessonDir.name}"].dependsOn "clean${lessonDir.name}${codeDir.name}"

                // Compile Activity/Exercise/Snippet Task
                task "compile${lessonDir.name}${codeDir.name}" (type:JavaCompile) {
                    classpath = files(codeDir)
                    destinationDir = compileDir
                    source = files(javaFiles)
                    sourceCompatibility = '1.8'
                    targetCompatibility = '1.8'
                }
                tasks["compile${lessonDir.name}"].dependsOn "compile${lessonDir.name}${codeDir.name}"
            }
        }
    }
}
